package lop;

import values;

public def Token class(name: String, value: String, source: StringSource) => {
    members {
        name fun() => name,
        value fun() => value,
        source fun() => source,
        equals fun(other: Token) => asValue().equals(other),
        toRepresentation
    }
    
    def asValue fun() => values.asValue[Token](Token(name, value, source), Token, listOf(
        values.attribute[Token, String]("name", fun(token: Token) => token.name()),
        values.attribute[Token, String]("value", fun(token: Token) => token.value()),
        values.attribute[Token, String]("source", fun(token: Token) => token.source())
    ));
    
    def toRepresentation fun() =>
        "Token("
            .concat("name=").concat(name)
            .concat(",value=").concat(value)
            .concat(",source=").concat(representation(source))
            .concat(")");
}
