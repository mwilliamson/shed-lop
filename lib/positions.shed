module lop.positions;

members {
    calculateStringCoordinates
}

import options;

def calculateStringCoordinates fun(string: String, index: Double) =>
    string.indexOf("\n").map(fun(newLineIndex: Double) =>
        if newLineIndex.lessThan(index) then
            let
                val remainingIndex = newLineIndex.add(1)
                val remaining = string.sliceFrom(remainingIndex)
                val coordinatesInRemaining =
                    calculateStringCoordinates(remaining, index.subtract(remainingIndex))
            in StringCoordinates(
                coordinatesInRemaining.lineIndex().add(1),
                coordinatesInRemaining.characterIndex()
            )
        else
            StringCoordinates(0, index)
    ).valueOrElse(fun() => StringCoordinates(0, index))

def StringCoordinates class(lineIndex: Double, characterIndex: Double) => {
    members {
        lineIndex fun() => lineIndex,
        characterIndex fun() => characterIndex
    }
}
